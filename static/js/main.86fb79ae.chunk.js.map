{"version":3,"sources":["utils/utils.js","components/HomePage/HomePage.jsx","components/MoviesPage/MoviesPage.jsx","components/MovieDetailsPage/Cast/Cast.jsx","components/MovieDetailsPage/Reviews/Reviews.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/App/App.jsx","index.js"],"names":["url","fullUrl","indexOf","config","apiKey","fetch","then","res","json","HomePage","state","movies","utils","setState","results","this","map","m","key","id","to","title","Component","MoviePage","search","e","preventDefault","query","target","value","props","history","push","encodeURIComponent","setTimeout","params","queryString","parse","location","onSubmit","type","name","r","Cast","credits","movieId","cast","p","src","profile_path","alt","character","reviews","length","author","content","MoviePageDetails","movie","match","original_title","release_date","slice","poster_path","align","Math","round","vote_average","overview","genres","g","Reviews","App","exact","path","component","MoviesPage","MovieDetailsPage","render","ReactDOM","document","querySelector"],"mappings":"4VAEe,WACLA,GACN,IAAIC,EAAO,sCAAkCD,GAI7C,OAHAC,IAAqC,IAA1BA,EAAQC,QAAQ,KAAc,IAAM,IAC/CD,GAAO,kBAAeE,EAAOC,QAEtBC,MAAMJ,GAASK,MAAK,SAAAC,GACzB,OAAOA,EAAIC,WCLIC,E,2MACnBC,MAAQ,CACNC,OAAQ,I,mFAGW,IAAD,OAClBC,EAAc,uBAAuBN,MAAK,SAAAC,GACxC,EAAKM,SAAS,CACZF,OAAQJ,EAAIO,e,+BAMhB,OACE,6BACE,8CACCC,KAAKL,MAAMC,OAAOK,KAAI,SAAAC,GACrB,OACE,yBAAKC,IAAKD,EAAEE,IACV,kBAAC,IAAD,CAAMC,GAAI,WAAaH,EAAEE,IAAKF,EAAEI,gB,GApBRC,a,iBCCjBC,E,2MACnBb,MAAQ,CACNI,QAAS,M,mFAITC,KAAKS,W,+BAGEC,GAAI,IAAD,OACVA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOD,MAAME,MAC7Bd,KAAKe,MAAMC,QAAQC,KAAK,UAAYC,mBAAmBN,IACvDO,YAAW,kBAAM,EAAKV,WAAU,O,+BAGxB,IAAD,OACDW,EAASC,IAAYC,MAAMtB,KAAKe,MAAMQ,SAASd,QAEjDW,EAAOR,OACTf,EAAc,uBAAyBqB,mBAAmBE,EAAOR,QAAQrB,MAAK,SAAAC,GAC5E,EAAKM,SAAS,CAAEC,QAASP,EAAIO,e,+BAKzB,IAAD,OACCA,EAAYC,KAAKL,MAAjBI,QAER,OACE,6BACE,0BAAMyB,SAAU,SAAAd,GAAC,OAAI,EAAKc,SAASd,KACjC,2BAAOe,KAAK,OAAOC,KAAK,UACxB,2BAAOD,KAAK,YAEb1B,GACC,4BACGA,EAAQE,KAAI,SAAA0B,GAAC,OACZ,wBAAIxB,IAAKwB,EAAEvB,IACT,kBAAC,IAAD,CAAMC,GAAI,WAAasB,EAAEvB,IAAKuB,EAAErB,iB,GAvCTC,aCsCxBqB,E,2MAtCbjC,MAAQ,CACNkC,QAAS,M,mFAGU,IAAD,OACZC,EAAU9B,KAAKe,MAAMe,QAC3BjC,EAAc,UAAYiC,EAAU,YAAYvC,MAAK,SAAAsC,GACnD,EAAK/B,SAAS,CAAE+B,iB,+BAKlB,IAAMA,EAAU7B,KAAKL,MAAMkC,QAE3B,OACE,6BACGA,GACC,6BACGA,EAAQE,KAAK9B,KAAI,SAAA+B,GAAC,OACjB,yBAAK7B,IAAK6B,EAAE5B,IACV,6BACE,yBAAK6B,IAAK,iCAAmCD,EAAEE,aAAcC,IAAI,MAEnE,6BAAMH,EAAEN,MACR,2CAAiBM,EAAEI,qB,GAzBhB7B,aCqCJqB,E,2MApCbjC,MAAQ,CACN0C,QAAS,M,mFAGU,IAAD,OACZP,EAAU9B,KAAKe,MAAMe,QAC3BjC,EAAc,UAAYiC,EAAU,YAAYvC,MAAK,SAAA8C,GACnD,EAAKvC,SAAS,CAAEuC,iB,+BAKlB,IAAMA,EAAUrC,KAAKL,MAAM0C,QAE3B,OACE,6BACGA,GAAWA,EAAQtC,QAAQuC,OAC1B,4BACGD,EAAQtC,QAAQE,KAAI,SAAA0B,GAAC,OACpB,wBAAIxB,IAAKwB,EAAEvB,IACT,gCAASuB,EAAEY,QACX,2BAAIZ,EAAEa,SACN,kCAIJ,+C,GA3BOjC,aCmEJkC,E,2MA/Db9C,MAAQ,CACN+C,MAAO,M,mFAGY,IAAD,OACZZ,EAAU9B,KAAKe,MAAM4B,MAAMvB,OAAOU,QACxCjC,EAAc,UAAYiC,GAASvC,MAAK,SAAAmD,GACtC,EAAK5C,SAAS,CAAE4C,e,+BAKlB,IAAMjB,EAAOzB,KAAKe,MAAMU,KAClBiB,EAAQ1C,KAAKL,MAAM+C,MAEzB,OACE,6BACE,6BACE,kBAAC,IAAD,CAAMrC,GAAG,KAAT,YAEDqC,GACC,6BACE,4BACGA,EAAME,eADT,KAC2BF,EAAMG,aAAaC,MAAM,EAAG,GADvD,KAGA,6BACE,yBAAKb,IAAK,iCAAmCS,EAAMK,YAAaZ,IAAI,GAAGa,MAAM,SAC7E,4CAAkBC,KAAKC,MAA2B,GAArBR,EAAMS,cAAnC,KAEA,wCACA,6BAAMT,EAAMU,UAEZ,sCACA,6BACGV,EAAMW,OAAOpD,KAAI,SAAAqD,GAAC,OACjB,0BAAMnD,IAAKmD,EAAElD,IAAb,IAAmBkD,EAAE5B,KAArB,UAIN,6BACA,uDACA,4BACE,4BACE,kBAAC,IAAD,CAAMrB,GAAE,kBAAaqC,EAAMtC,GAAnB,UAAR,SAEF,4BACE,kBAAC,IAAD,CAAMC,GAAE,kBAAaqC,EAAMtC,GAAnB,aAAR,aAGJ,6BACU,SAATqB,GAAmB,kBAAC,EAAD,CAAMK,QAASY,EAAMtC,KAC/B,YAATqB,GAAsB,kBAAC8B,EAAD,CAASzB,QAASY,EAAMtC,W,GApD5BG,aCiBhBiD,EAlBH,kBACV,6BACE,6BACE,kBAAC,IAAD,CAAMnD,GAAG,KAAT,QACA,mCACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,YAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,IAAIC,UAAWjE,IACjC,kBAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,mBAAmBC,UAAWE,IAChD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,wBAAwBI,OAAQ,SAAC/C,GAAD,OAAW,kBAAC8C,EAAD,iBAAsB9C,EAAtB,CAA6BU,KAAK,aAC/F,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,2BAA2BI,OAAQ,SAAC/C,GAAD,OAAW,kBAAC8C,EAAD,iBAAsB9C,EAAtB,CAA6BU,KAAK,gBAClG,kBAAC,IAAD,CAAUpB,GAAG,SCdnB0D,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,cAAc,Y","file":"static/js/main.86fb79ae.chunk.js","sourcesContent":["import config from '../data/config.json';\n\nexport default {\n  request(url) {\n    let fullUrl = `https://api.themoviedb.org/3${url}`;\n    fullUrl += fullUrl.indexOf('?') !== -1 ? '&' : '?';\n    fullUrl += `api_key=${config.apiKey}`;\n\n    return fetch(fullUrl).then(res => {\n      return res.json();\n    });\n  },\n};\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport utils from '../../utils/utils.js';\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    utils.request('/trending/movie/day').then(res => {\r\n      this.setState({\r\n        movies: res.results\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Trending today</h1>\r\n        {this.state.movies.map(m => {\r\n          return (\r\n            <div key={m.id}>\r\n              <Link to={'/movies/' + m.id}>{m.title}</Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport utils from '../../utils/utils.js';\r\n\r\nexport default class MoviePage extends Component {\r\n  state = {\r\n    results: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.search();\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const query = e.target.query.value;\r\n    this.props.history.push('?query=' + encodeURIComponent(query));\r\n    setTimeout(() => this.search(), 100);\r\n  }\r\n\r\n  search() {\r\n    const params = queryString.parse(this.props.location.search);\r\n\r\n    if (params.query) {\r\n      utils.request('/search/movie?query=' + encodeURIComponent(params.query)).then(res => {\r\n        this.setState({ results: res.results });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={e => this.onSubmit(e)}>\r\n          <input type=\"text\" name=\"query\" />\r\n          <input type=\"submit\" />\r\n        </form>\r\n        {results && (\r\n          <ul>\r\n            {results.map(r => (\r\n              <li key={r.id}>\r\n                <Link to={'/movies/' + r.id}>{r.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport utils from '../../../utils/utils.js';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    credits: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const movieId = this.props.movieId;\r\n    utils.request('/movie/' + movieId + '/credits').then(credits => {\r\n      this.setState({ credits });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const credits = this.state.credits;\r\n\r\n    return (\r\n      <div>\r\n        {credits && (\r\n          <div>\r\n            {credits.cast.map(p => (\r\n              <div key={p.id}>\r\n                <div>\r\n                  <img src={'http://image.tmdb.org/t/p/w185' + p.profile_path} alt=\"\"/>\r\n                </div>\r\n                <div>{p.name}</div>\r\n                <div>Character: {p.character}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCast.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport utils from '../../../utils/utils.js';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    reviews: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const movieId = this.props.movieId;\r\n    utils.request('/movie/' + movieId + '/reviews').then(reviews => {\r\n      this.setState({ reviews });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const reviews = this.state.reviews;\r\n\r\n    return (\r\n      <div>\r\n        {reviews && reviews.results.length ? (\r\n          <ul>\r\n            {reviews.results.map(r => (\r\n              <li key={r.id}>\r\n                <strong>{r.author}</strong>\r\n                <p>{r.content}</p>\r\n                <hr/>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : 'We dont have any reviews for this movie'}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCast.propTypes = {\r\n  movieId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Cast from './Cast/Cast';\r\nimport Reviews from './Reviews/Reviews';\r\nimport utils from '../../utils/utils.js';\r\n\r\nclass MoviePageDetails extends Component {\r\n  state = {\r\n    movie: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n    utils.request('/movie/' + movieId).then(movie => {\r\n      this.setState({ movie });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const type = this.props.type;\r\n    const movie = this.state.movie;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Link to=\"/\">Go back</Link>\r\n        </div>\r\n        {movie && (\r\n          <div>\r\n            <h1>\r\n              {movie.original_title} ({movie.release_date.slice(0, 4)})\r\n            </h1>\r\n            <div>\r\n              <img src={'http://image.tmdb.org/t/p/w185' + movie.poster_path} alt=\"\" align=\"left\" />\r\n              <div>User score: {Math.round(movie.vote_average * 10)}%</div>\r\n\r\n              <h3>Overview</h3>\r\n              <div>{movie.overview}</div>\r\n\r\n              <h3>Genres</h3>\r\n              <div>\r\n                {movie.genres.map(g => (\r\n                  <span key={g.id}> {g.name} </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr/>\r\n            <div>Additional information</div>\r\n            <ul>\r\n              <li>\r\n                <Link to={`/movies/${movie.id}/cast`}>Cast</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`/movies/${movie.id}/reviews`}>Reviews</Link>\r\n              </li>\r\n            </ul>\r\n            <hr/>\r\n            {type === 'cast' && <Cast movieId={movie.id} />}\r\n            {type === 'reviews' && <Reviews movieId={movie.id} />}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMoviePageDetails.propTypes = {\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default MoviePageDetails;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect, Link } from 'react-router-dom';\r\nimport HomePage from '../HomePage/HomePage';\r\nimport MoviesPage from '../MoviesPage/MoviesPage';\r\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <div>\r\n      <Link to=\"/\">Home</Link>\r\n      <span>|</span>\r\n      <Link to=\"/movies\">Moviews</Link>\r\n    </div>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route exact path=\"/movies/\" component={MoviesPage} />\r\n      <Route exact path=\"/movies/:movieId\" component={MovieDetailsPage} />\r\n      <Route exact path=\"/movies/:movieId/cast\" render={(props) => <MovieDetailsPage {...props} type=\"cast\" />} />\r\n      <Route exact path=\"/movies/:movieId/reviews\" render={(props) => <MovieDetailsPage {...props} type=\"reviews\" />} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}